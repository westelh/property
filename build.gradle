apply plugin: 'cpp'
apply plugin: 'google-test'

model {
    components {
        libproperty(NativeLibrarySpec)
    }

    binaries {
        withType(GoogleTestTestSuiteBinarySpec) {
            lib library: "googleTest", linkage: "static"

            if (targetPlatform.operatingSystem.linux) {
                cppCompiler.args '-pthread'
                linker.args '-pthread'

                if (toolChain instanceof Gcc || toolChain instanceof Clang) {
                    // Use C++03 with the old ABIs, as this is what the googletest binaries were built with
                    cppCompiler.args '-std=c++03', '-D_GLIBCXX_USE_CXX11_ABI=0'
                    linker.args '-std=c++03'
                }
            }
        }
    }

    repositories {
        libs(PrebuiltLibraries) {
            googleTest {
                def path = new File(getProperty("gtest.path")).getAbsolutePath()
                
                headers.srcDirs "$path/include"
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("$path/lib/libgtest.a")
                }
            }
        }
    }
}